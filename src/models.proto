syntax = "proto2";

package models;

/**
/simulations
  /cycles
    /step
      /creatures
        /states
        /brains
          /neurons
        /traits
*/

message Point {
  required float x = 1;
  required float y = 2;
}

message Block {
  required Point position = 1;
  required float width = 2;
  required float height = 3;
}

message Bounds {
  repeated Block blocks = 1;
  required uint32 width = 2;
  required uint32 height = 3;
}

message Traits {
  required float restitution = 1;
  required float friction = 2;
  required float stamina = 3;
  required float block_mass = 4;
  required uint32 block_amount = 5;
  required float strength = 6;
  repeated float color = 7;
  repeated string gene_codes = 8;
}

enum Activation {
  Sigmoid = 1;
  Softmax = 2;
}

message Neuron {
  required Activation activation = 1;
  required float bias = 2;
  repeated float weights = 3;
}

message Brain {
  required Activation activation = 1;
  repeated Neuron hidden = 2;
  repeated Neuron output = 3;
}

message Creature {
    required uint32 creature_id = 1;
    required Brain brain = 2;
    required Traits traits = 3;
    required Bounds bounds = 4;
}

message CreatureState {
  required uint32 creature_id = 1;
  required Point translation = 2;
  required float rotation = 3;
  required float stamina = 4;
  required uint32 decision = 5;
}

message Wall {
  required Bounds bounds = 1;
}

message Step {
  required uint32 step_id = 1;
  map<uint32, CreatureState> states = 2;
  repeated Wall dynamic_walls = 3;
}

message Cycle {
  required uint32 cycle_id = 1;
  map<uint32, Creature> creatures = 2;
  repeated Wall walls = 3;
  repeated Step steps = 4;
}

message Constants {
  required uint32 max_cycles = 1;
  required uint32 max_steps = 2;
  required uint32 creature_amount = 3;
  required uint32 brain_size = 4;
  required uint32 input_size = 5;
  required uint32 output_size = 6;
  required uint32 block_amount = 7;
  required float block_size = 8;
}